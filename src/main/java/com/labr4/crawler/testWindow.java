/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.labr4.crawler;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.AdjustmentEvent;
/**
 *
 * @author Guacha
 */
public class testWindow extends javax.swing.JFrame {

    
    java.awt.Graphics graphics;
    private int camX = 0;
    Arbre t;
    
    /**
     * Creates new form testWindow
     * @param t
     */
    public testWindow(Arbre t) {
        initComponents();
        graphics = graphPane.getGraphics();
        addScrollListener();
        this.t = t;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showPane = new javax.swing.JScrollPane();
        graphPane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout graphPaneLayout = new javax.swing.GroupLayout(graphPane);
        graphPane.setLayout(graphPaneLayout);
        graphPaneLayout.setHorizontalGroup(
            graphPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4000, Short.MAX_VALUE)
        );
        graphPaneLayout.setVerticalGroup(
            graphPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3000, Short.MAX_VALUE)
        );

        showPane.setViewportView(graphPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1283, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showPane, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addScrollListener() {
        showPane.getHorizontalScrollBar().addAdjustmentListener((AdjustmentEvent e) -> {
            if (isAumenting(e.getValue())) {
                
                graphics.translate(camX-e.getValue(), 0);
                camX = e.getValue();
            } else {
                
                graphics.translate(camX-e.getValue(), 0);
                
                camX = e.getValue();
            }            
        });
    }
    
    public boolean isAumenting(int camAct){
        return camAct > camX;
    }
    
    private void drawArbol(Node nodo, int x, int y, int lvl) {
        
        if (nodo != null) {
            if (!nodo.hijos.isEmpty()) {
                int des = nodo.hijos.size(); 
                int split = (int) ((graphPane.getWidth()/2)/Math.pow(des, lvl+1));
                for (Node hijo : nodo.hijos) {
                    //nel
                }
            }
        }
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel graphPane;
    private javax.swing.JScrollPane showPane;
    // End of variables declaration//GEN-END:variables
}
